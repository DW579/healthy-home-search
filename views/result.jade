extends layout

block content

  section.main
    header
      .row
        nav.main-nav.top-bar(data-topbar='', role='navigation')
          ul.title-area
            li.name

            span.toggle-topbar.menu-icon
              a(href='#')
                span Menu

          section#mean_nav.top-bar-section                
            ul.right
              li
                a(href='#scores') Your NeighborGood Scores
              li
                a(href='#community') Community
              li
                a(href='#accessibility') Accessibility
              li
                a(href='#environment') Environment
              li
                a(href='#safety') Safety
              if user
                li
                  a.prof(href='user/#{user.id}') Profile
                li
                  a.signout(href='signout') Sign Out
                li
                  a.save_button(href='#') Save Your Search
              else
                li
                  a.register(href='#') Sign In
                li
                  a.register(href='#') Sign Up
    .render-success(display='none')
      h2.sub_cap You Search Have Been Saved In Your Profile
    section.caption
      .row
        if user
          h1.mean_cap Hi #{user.full_name}, 
          h2.sub_cap Discover 
            span.neighbor #{allData.renderRestaurants.location.title}
            span.with With Neighbor
            span.good Good
        else
          h2.sub_cap Discover #{allData.renderRestaurants.location.title}With Neighbor
            span.logo-sub Good
        
        a.score_arrow.btn_details(href='#scores')
          span.peach See Your Healthy Home Scores
          img.arrow(src='images/btn_arrow.png', alt='')
            
  section#scores.scores
    .row
      h1.mean_title How Your Neighborhood Scores
      h2.sub_title Live Where You Love


    .row.scores_list
      .small-12.medium-3.large-3.columns


        -  var schoolScore = allData.renderSchool[0];
        -  var parkScore = allData.renderParks[0];
        -  var cultScore = allData.renderCultCenters[0];
        -  var viewScore = allData.renderViewpoints[0];

        -  var comScore = Math.floor((schoolScore + parkScore + cultScore + viewScore) / 4);

        img.serv_icon(src='images/icons/ic_local_activity_black_48dp/web/ic_local_activity_black_48dp_2x.png', alt='', title='')
        h1.mean_title_score #{comScore}
        .btn_holder
          a.btn_fancy(href='#community')
            .solid_layer
            .border_layer
            .text_layer Community
        br
        p
          | Everyday life can be very busy. Make sure that all your work and fun activities are close to home. When the community is close, everything is close.

      .small-12.medium-3.large-3.columns
        img.serv_icon(src='images/icons/ic_airport_shuttle_black_48dp/web/ic_airport_shuttle_black_48dp_2x.png', alt='', title='')
        h1.mean_title_score #{allData.renderTransit[0]}
        .btn_holder
          a.btn_fancy(href='#accessibility')
            .solid_layer
            .border_layer
            .text_layer Accessibility
        br
        p
          | Travel time to work and entrainment can take away from serious time that can be used for over things. We will show you how accessible your new home will be to transit locations.

      .small-12.medium-3.large-3.columns
        img.serv_icon(src='images/icons/ic_vpn_key_black_48dp/web/ic_vpn_key_black_48dp_2x.png', alt='', title='')
        h1.mean_title_score #{allData.renderCrime[0]}
        .btn_holder
          a.btn_fancy(href='#safety')
            .solid_layer
            .border_layer
            .text_layer Safety
        br
        p
          | Safety is an important factor in reducing your stress at home. Become aware of criminal activity that has occurred within the neighborhood.

      - var transitGrade = allData.renderPermits[0];
      - var aqiGrade = ((allData.renderAqi.breezometer_aqi) + 30);
      - var enviroGrade = Math.ceil((transitGrade + aqiGrade) / 2);

      .small-12.medium-3.large-3.columns
        img.serv_icon(src='images/icons/ic_public_black_48dp/web/ic_public_black_48dp_2x.png', alt='', title='')
        h1#odometer.mean_title_score.odometer #{enviroGrade}
        .btn_holder
          a.btn_fancy(href='#environment')
            .solid_layer
            .border_layer
            .text_layer Environment
        br
        p
          | 

  section#community.community
    .expanded
      .large-7.columns
        #community_map
        nav.menu-ui.cm
          a.active(href='#', data-filter='all') Show all
          a(href='#', data-filter='schools') Schools
          a(href='#', data-filter='parks') Parks
          a(href='#', data-filter='restaurants') Restaurants
          a(href='#', data-filter='viewpoints') Viewpoints
          a(href='#', data-filter='cultural-spaces') Cultural Spaces

      .large-5.columns
        .community_sub
          h2.sub_cap Community 
  .cube
  section#accessibility.accessibility
    .expanded
      .large-7.columns
        #accessibility_map
        nav.menu-ui.am
          a.active(href='#', data-filter='all') Show all
          a(href='#', data-filter='bus-stop') Bus Stops
          a(href='#', data-filter='parking') Parking Lots/Garages
          
      .large-5.columns
        .accessibility_sub
          h2.sub_cap_sec Accessibility
          
          div(class="wscore")
            img(src="https://cdn.walk.sc/images/api-logo.png")
            h3 #{allData.renderWalkScore.walkscore}
            p #{allData.renderWalkScore.description}
  .cube
  section#environment.environment
    .expanded
      .large-7.columns
        #environment_map
        nav.menu-ui.em
          a.active(href='#', data-filter='all') Show all
          a(href='#', data-filter='single-family') Single Family
          a(href='#', data-filter='multifamily') Multifamily
          a(href='#', data-filter='commercial') Commercial
          a(href='#', data-filter='institutional') Institutional
          a(href='#', data-filter='indulstrial') Indulstrial
      .large-5.columns
        .environment_sub
          h2.sub_cap Environment

          h3 #{allData.renderAqi.breezometer_aqi}
          p #{allData.renderAqi.breezometer_description}
  .break
  section#safety.safety
    .expanded
      .large-7.columns

        .crime_graph

      .large-5.columns
        .safety_sub
          h2.sub_cap_third Safety
          p Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.

  .shadow


  footer
  a#back_top.btn_fancy(href='#')
    .solid_layer
    .border_layer
    .text_layer
      img.top_arrow(src='images/top_arrow.png', alt='Back to top', title='')

  script.
    L.mapbox.accessToken = 'pk.eyJ1IjoiaGVucnliaSIsImEiOiJjaW42NmVvMmowZTFidXBra2xkM2N3cTE1In0.cdfJiLolXJoUefefWOKqew';

    var allData = !{JSON.stringify(allData)};
    console.log(allData);

    var communityMap = new L.mapbox.map('community_map', 'mapbox.streets').setView([#{allData.renderLocation.long}, #{allData.renderLocation.lat}], 15);

    L.mapbox.styleLayer('mapbox://styles/henrybi/cin8j804n0090bckv5dtpjoe3').addTo(communityMap);

    L.mapbox.featureLayer({
      type: 'Feature',
      geometry: {
        type: 'Point',
        coordinates: [
          #{allData.renderLocation.lat},
          #{allData.renderLocation.long}
        ]
      },
      properties: {
        title: 'My Potential Home',
        description: 'By NeighborGood',
        'marker-size': 'large',
        'marker-color': '#E96956',
        'marker-symbol': 'star',
        }
    }).addTo(communityMap);

    var communityGeoJson = [];

    for (var i = 0; i < allData.renderSchool[1].length; i++) {
      communityGeoJson.push({
        "type": "Feature",
        "geometry": {
          "coordinates": [
            allData.renderSchool[1][i].long_cen,
            allData.renderSchool[1][i].lat_cen
          ],
          "type": "Point"
        },
        "properties": {
          "title": allData.renderSchool[1][i].name,
          "schools": true,
          "parks": false,
          "restaurants": false,
          "viewpoints": false,
          "cultural-spaces": false,
          "marker-color": "#63afb8",
          "marker-size": "medium",
          "marker-symbol": "school"
        }
      });
    }

    for (var j = 0; j < allData.renderParks[1].length; j++) {
      communityGeoJson.push({
        "type": "Feature",
        "geometry": {
          "coordinates": [
            allData.renderParks[1][j].longitude,
            allData.renderParks[1][j].latitude
          ],
          "type": "Point"
        },
        "properties": {
          "title": allData.renderParks[1][j].common_name,
          "schools": false,
          "parks": true,
          "restaurants": false,
          "viewpoints": false,
          "cultural-spaces": false,
          "marker-color": "#3ebc36",
          "marker-size": "medium",
          "marker-symbol": "park"
        }
      });
    }



    for (var r = 1; r <= 9; r++) {
      communityGeoJson.push({
        "type": "Feature",
        "geometry": {
          "coordinates": [
            allData.renderRestaurants.nearby_restaurants[r].restaurant.location.longitude, allData.renderRestaurants.nearby_restaurants[r].restaurant.location.latitude
          ],
          "type": "Point"
        },
        "properties": {
          "title": allData.renderRestaurants.nearby_restaurants[r].restaurant.name,
          "schools": false,
          "parks": false,
          "restaurants": true,
          "viewpoints": false,
          "cultural-spaces": false,
          "marker-color": "#7bd0b5",
          "marker-size": "medium",
          "marker-symbol": "bar"
        }

      });
    }

    for (var k = 0; k < allData.renderViewpoints[1].length; k++) {
      communityGeoJson.push({
        "type": "Feature",
        "geometry": {
          "coordinates": [
            allData.renderViewpoints[1][k].longitude,
            allData.renderViewpoints[1][k].latitude
          ],
          "type": "Point"
        },
        "properties": {
          "title": allData.renderViewpoints[1][k].common_name,
          "schools": false,
          "parks": false,
          "restaurants": false,
          "viewpoints": true,
          "cultural-spaces": false,
          "marker-color": "#b1c128",
          "marker-size": "medium",
          "marker-symbol": "star"
        }
      });
    }

    for (var l = 0; l < allData.renderCultCenters[1].length; l++) {
      communityGeoJson.push({
        "type": "Feature",
        "geometry": {
          "coordinates": [
            allData.renderCultCenters[1][l].location.coordinates[0],
            allData.renderCultCenters[1][l].location.coordinates[1]
          ],
          "type": "Point"
        },
        "properties": {
          "title": allData.renderCultCenters[1][l].name,
          "schools": false,
          "parks": false,
          "restaurants": false,
          "viewpoints": false,
          "cultural-spaces": true,
          "marker-color": "#b65bc1",
          "marker-size": "medium",
          "marker-symbol": "music"
        }
      });
    }

    var communityMarkers = L.mapbox.featureLayer().setGeoJSON(communityGeoJson).addTo(communityMap);

    $('.cm a').on('click', function(e) {
      e.preventDefault();
      var filter = $(this).data('filter');
      $(this).addClass('active').siblings().removeClass('active');
      communityMarkers.setFilter(function(f) {
        return (filter === 'all') ? true : f.properties[filter] === true;
      });
      return false;
    });


    var accessibilityMap = new L.mapbox.map('accessibility_map', 'mapbox.streets').setView([#{allData.renderLocation.long}, #{allData.renderLocation.lat}], 16);

    L.mapbox.styleLayer('mapbox://styles/henrybi/cin8j804n0090bckv5dtpjoe3').addTo(accessibilityMap);

    L.mapbox.featureLayer({
      type: 'Feature',
      geometry: {
        type: 'Point',
        coordinates: [
          #{allData.renderLocation.lat},
          #{allData.renderLocation.long}
        ]
      },
      properties: {
        title: 'My Potential Home',
        description: 'By NeighborGood',
        'marker-size': 'large',
        'marker-color': '#E96956',
        'marker-symbol': 'star',
        }
    }).addTo(accessibilityMap);

    var accessibilityGeoJson = [];

    for (var p = 0; p < allData.renderTransit[1].data.list.length; p++) {
      accessibilityGeoJson.push({
        "type": "Feature",
        "geometry": {
          "coordinates": [
            allData.renderTransit[1].data.list[p].lon,
            allData.renderTransit[1].data.list[p].lat
          ],
          "type": "Point"
        },
        "properties": {
          "title": "Bus-Stop",
          "description": allData.renderTransit[1].data.list[p].name,
          "bus-stop": true,
          "parking": false,
          "marker-color": "#4c8bc1",
          "marker-size": "medium",
          "marker-symbol": "bus"
        }
      });
    }

    for (var q = 0; q < allData.renderParking[1].length; q++) {
      accessibilityGeoJson.push({
        "type": "Feature",
        "geometry": {
          "coordinates": [
            allData.renderParking[1][q].shape.longitude,
            allData.renderParking[1][q].shape.latitude
          ],
          "type": "Point"
        },
        "properties": {
          "title": "Parking",
          "description": allData.renderParking[1][q].fac_type || allData.renderParking[1][q].fac_name || allData.renderParking[1][q].webname,
          "bus-stop": false,
          "parking": true,
          "marker-color": "#63afb8",
          "marker-size": "medium",
          "marker-symbol": "car"
        }
      });
    }

    var accessibilityMarkers = L.mapbox.featureLayer().setGeoJSON(accessibilityGeoJson).addTo(accessibilityMap);

    $('.am a').on('click', function(e) {
      e.preventDefault();
      var filter = $(this).data('filter');
      $(this).addClass('active').siblings().removeClass('active');
      accessibilityMarkers.setFilter(function(f) {
        return (filter === 'all') ? true : f.properties[filter] === true;
      });
      return false;
    });

    var environmentMap = new L.mapbox.map('environment_map', 'mapbox.streets').setView([#{allData.renderLocation.long}, #{allData.renderLocation.lat}], 16);

    L.mapbox.featureLayer({
      type: 'Feature',
      geometry: {
        type: 'Point',
        coordinates: [
          #{allData.renderLocation.lat},
          #{allData.renderLocation.long}
        ]
      },
      properties: {
        title: 'My Potential Home',
        description: 'By NeighborGood',
        'marker-size': 'large',
        'marker-color': '#E96956',
        'marker-symbol': 'star',
        }
    }).addTo(environmentMap);

    var environmentGeoJson = [];

    for (var o = 0; o < allData.renderPermits[1].length; o++) {
      if(allData.renderPermits[1][o].status !== 'Permit Closed' && allData.renderPermits[1][o].status !== 'CANCELLED' && allData.renderPermits[1][o].status !== undefined){
        if(allData.renderPermits[1][o].category === 'SINGLE FAMILY / DUPLEX'){
          environmentGeoJson.push({
            "type": "Feature",
            "geometry": {
              "coordinates": [
                allData.renderPermits[1][o].longitude,
                allData.renderPermits[1][o].latitude
              ],
              "type": "Point"
            },
            "properties": {
              "title": allData.renderPermits[1][o].status,
              "description": 'Permit Type for this Project is ' + allData.renderPermits[1][o].permit_type + ' And The Project is ' + allData.renderPermits[1][o].description,
              "single-family": true,
              "multifamily": false,
              "commercial": false,
              "indulstrial": false,
              "institutional": false,
              "marker-color": "#63afb8",
              "marker-size": "medium",
              "marker-symbol": "star"
            }
          });
        } else if (allData.renderPermits[1][o].category === 'MULTIFAMILY'){
          environmentGeoJson.push({
            "type": "Feature",
            "geometry": {
              "coordinates": [
                allData.renderPermits[1][o].longitude,
                allData.renderPermits[1][o].latitude
              ],
              "type": "Point"
            },
            "properties": {
              "title": allData.renderPermits[1][o].status,
              "description": 'Permit Type for this Project is ' + allData.renderPermits[1][o].permit_type + ' And The Project is ' + allData.renderPermits[1][o].description,
              "single-family": false,
              "multifamily": true,
              "commercial": false,
              "indulstrial": false,
              "institutional": false,
              "marker-color": "#00dab6",
              "marker-size": "medium",
              "marker-symbol": "star"
            }
          });
        } else if (allData.renderPermits[1][o].category === 'COMMERCIAL'){
          environmentGeoJson.push({
            "type": "Feature",
            "geometry": {
              "coordinates": [
                allData.renderPermits[1][o].longitude,
                allData.renderPermits[1][o].latitude
              ],
              "type": "Point"
            },
            "properties": {
              "title": allData.renderPermits[1][o].status,
              "description": 'Permit Type for this Project is ' + allData.renderPermits[1][o].permit_type + ' And The Project is ' + allData.renderPermits[1][o].description,
              "single-family": false,
              "multifamily": false,
              "commercial": true,
              "indulstrial": false,
              "institutional": false,
              "marker-color": "#008ada",
              "marker-size": "medium",
              "marker-symbol": "restaurant"
            }
          });
        } else if (allData.renderPermits[1][o].category === 'INSTITUTIONAL'){
          environmentGeoJson.push({
            "type": "Feature",
            "geometry": {
              "coordinates": [
                allData.renderPermits[1][o].longitude,
                allData.renderPermits[1][o].latitude
              ],
              "type": "Point"
            },
            "properties": {
              "title": allData.renderPermits[1][o].status,
              "description": 'Permit Type for this Project is ' + allData.renderPermits[1][o].permit_type + ' And The Project is ' + allData.renderPermits[1][o].description,
              "single-family": false,
              "multifamily": false,
              "commercial": false,
              "indulstrial": false,
              "institutional": true,
              "marker-color": "#007123",
              "marker-size": "medium",
              "marker-symbol": "school"
            }
          });
        } else if (allData.renderPermits[1][o].category === 'INDULSTRIAL'){
          environmentGeoJson.push({
            "type": "Feature",
            "geometry": {
              "coordinates": [
                allData.renderPermits[1][o].longitude,
                allData.renderPermits[1][o].latitude
              ],
              "type": "Point"
            },
            "properties": {
              "title": allData.renderPermits[1][o].status,
              "description": 'Permit Type for this Project is ' + allData.renderPermits[1][o].permit_type + ' And The Project is ' + allData.renderPermits[1][o].description,
              "single-family": false,
              "multifamily": false,
              "commercial": false,
              "indulstrial": false,
              "institutional": true,
              "marker-color": "#001071",
              "marker-size": "medium",
              "marker-symbol": "harbor"
            }
          });
        }
      }
    }

    var environmentMarkers = L.mapbox.featureLayer().setGeoJSON(environmentGeoJson).addTo(environmentMap);

    $('.em a').on('click', function(e) {
      e.preventDefault();
      var filter = $(this).data('filter');
      $(this).addClass('active').siblings().removeClass('active');
      environmentMarkers.setFilter(function(f) {
        return (filter === 'all') ? true : f.properties[filter] === true;
      });
    });
    
    var diameter = 720,
        format = d3.format(",d"),
        color = d3.scale.category20c();

    var bubble = d3.layout.pack()
        .sort(null)
        .size([diameter, diameter])
        .padding(1.5);

    var svg = d3.select(".crime_graph").append("svg")
        .attr("width", diameter)
        .attr("height", diameter)
        .attr("class", "bubble");
    
    d3.json("crime.json", function(error, root) {
      if (error) throw error;

      var node = svg.selectAll(".node")
          .data(bubble.nodes(classes(root))
          .filter(function(d) { return !d.children; }))
        .enter().append("g")
          .attr("class", "node")
          .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });

      node.append("title")
          .text(function(d) { return d.className + ": " + format(d.value); });

      node.append("circle")
          .attr("r", function(d) { return d.r; })
          .style("fill", function(d) { return color(d.packageName); });

      node.append("text")
          .attr("dy", ".1em")
          .style("text-anchor","middle")
          .text(function(d) { return d.className.substring(0, d.r / 3); });
    });
    
    function classes(root) {
      var classes = [];

      function recurse(name, node) {
        if (node.children) node.children.forEach(function(child) { recurse(node.name, child); });
        else classes.push({packageName: name, className: node.name, value: node.size});
      }

      recurse(null, root);
      return {children: classes};
    }

    d3.select(self.frameElement).style("height", diameter + "px");
